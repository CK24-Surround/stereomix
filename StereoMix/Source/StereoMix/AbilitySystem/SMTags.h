#pragma once
#include "NativeGameplayTags.h"

namespace SMTags
{
	namespace Ability
	{
		namespace Activation
		{
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Catch);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Hold);
		}

		UE_DECLARE_GAMEPLAY_TAG_EXTERN(Caught);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(Holded);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(Smashed);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(CaughtExit);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(HoldedExit);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(CaughtExitOnStunEnd);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(HoldedExitOnStunEnd);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(Immune);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(CatchBuff);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(NoiseBreakIndicator);
	}

	namespace AttributeSet::Character::Init
	{
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(CurrentHP);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(MaxHP);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(MoveSpeed);
	}

	namespace Character
	{
		namespace Cooldown
		{
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Attack);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Hold);
		}

		namespace State
		{
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(SlashActivation);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Slash);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Catch);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Hold);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Caught);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Holded);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Stun);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Neutralize);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Smashing);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Smashed);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(NoiseBreak);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(NoiseBreaked);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Uncatchable);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Unholdable);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Immune);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Jump);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Charge);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(ImpactArrow);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(SlowBullet);
		}
	}

	namespace Data
	{
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(Duration);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(Damage);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(Cooldown);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(MoveSpeed);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(MoveSpeed);
	}

	namespace Item
	{
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(AttributeChanger);
	}

	namespace Event
	{
		namespace AnimNotify
		{
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Catch);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Hold);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Smash);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(SmashEnd);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(PianoNoiseBreakShoot);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(NoiseBreakEnd);

			namespace Attack
			{
				UE_DECLARE_GAMEPLAY_TAG_EXTERN(AttackStart);
				UE_DECLARE_GAMEPLAY_TAG_EXTERN(CanInput);
				UE_DECLARE_GAMEPLAY_TAG_EXTERN(CanProceedNextAction);
				UE_DECLARE_GAMEPLAY_TAG_EXTERN(LeftSlashNext);
				UE_DECLARE_GAMEPLAY_TAG_EXTERN(RightSlashNext);
			}
		}

		namespace Character
		{
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(BuzzerBeaterSmashEnd);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(BuzzerBeaterEnd);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(CaughtExitEnd);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Stun);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Neutralize);
		}

		namespace Tile
		{
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(TileTrigger);
		}
	}

	namespace GameplayCue
	{
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(PlayNiagara);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(ProjectileLaunch);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(ProjectileHit);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(ProjectileWallHit);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(Catch);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(Hold);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(CatchHit);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(Stun);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(Neutralize);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(ApplyHeal);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(ImmuneEnd);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(ImmuneMaterialApply_ElectricGuitar);
		UE_DECLARE_GAMEPLAY_TAG_EXTERN(ImmuneMaterialReset);

		namespace Bass
		{
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Slash);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(SlashHit);
		}

		namespace SpecialAction
		{
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Smash);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(SmashSuccessWithCharacter);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(SmashSplashHit);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(SmashSuccessWithHealItem);
		}

		namespace JumpPad
		{
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(UseJumpPad);
			UE_DECLARE_GAMEPLAY_TAG_EXTERN(Land);
		}
	}
}
