//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "CoreMinimal.h"
#include "Kismet/BlueprintAsyncActionBase.h"
#include "TurboLinkGrpcClient.h"
#include "GameMessage.h"
#include "GameNode.generated.h"

class UGameService;
class UGameServiceClient;

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallGameServiceGetServiceVersion : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FGameServiceGetServiceVersionDelegate, const FGrpcResult&, GrpcResult, const FGrpcGameGetServiceVersionResponse&, Response);

	UFUNCTION(BlueprintCallable, Category = "TurboLink|GameService", meta = (
		BlueprintInternalUseOnly = "true",
		WorldContext = "WorldContextObject",
		DisplayName = "Call GameService GetServiceVersion",
		AdvancedDisplay = 2))
	static UCallGameServiceGetServiceVersion* GetServiceVersion(UObject* WorldContextObject, const FGrpcGameGetServiceVersionRequest& request, FGrpcMetaData metaData = FGrpcMetaData(), float deadLineSeconds = 0.f);

	UPROPERTY(BlueprintAssignable)
	FGameServiceGetServiceVersionDelegate OnGetServiceVersionResponse;

	UPROPERTY(BlueprintAssignable)
	FGameServiceGetServiceVersionDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UGameService* GameService;
	
	UPROPERTY()
	UGameServiceClient* GameServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcGameGetServiceVersionRequest Request;
	EGrpcServiceState ServiceState;
	FGrpcMetaData MetaData;
	float DeadLineSeconds;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGameGetServiceVersionResponse& Response);

	void Shutdown();
};
